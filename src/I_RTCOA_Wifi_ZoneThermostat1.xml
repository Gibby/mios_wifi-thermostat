<?xml version="1.0"?>
<!-- 
 MiOS Plugin for Radio Thermostat Corporation of America, Inc. Wi-Fi Thermostats

 Copyright (C) 2012  Hugh Eaves

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<implementation>
	<settings>
		<protocol>raw</protocol>
	</settings>
	<functions>
		local lfs = require("lfs")

		function loadModule(moduleName)
			local srcFile = "/etc/cmh-ludl/" .. moduleName .. ".lua.lzo"
			local destFile = "/etc/cmh-ludl/" .. moduleName .. ".lua"
			local srcFileModified = lfs.attributes (srcFile, "modification")
			local destFileModified = lfs.attributes (destFile, "modification")
	
			luup.log("srcFile = " .. (srcFile or "nil"))
			luup.log("destFile = " .. (destFile or "nil"))
			luup.log("srcFileModified = " .. (srcFileModified or "nil"))
			luup.log("destFileModified = " .. (destFileModified or "nil"))
	
			if (not destFileModified or os.difftime(srcFileModified, destFileModified) > 0) then
				local tempFile = os.tmpname()
				local commandLine = "pluto-lzo d " .. srcFile .. " " .. tempFile
				luup.log ("commandLine = " .. commandLine)
				local result = os.execute(commandLine)
				luup.log ("os.execute result = " .. (result or "nil"))
				commandLine = "mv " .. tempFile .. " " .. destFile
				luup.log ("commandLine = " .. commandLine)
				result = os.execute(commandLine)
				luup.log ("os.execute result = " .. (result or "nil"))
			end
	
			return require(moduleName)
		end
	
		g_dkjson = loadModule("L_RTCOA_Wifi_dkjson")
		g_log = loadModule("L_RTCOA_Wifi_log")
		g_util = loadModule("L_RTCOA_Wifi_util")
		g_core = loadModule("L_RTCOA_Wifi_core")

		function initialize(lul_device)
			g_core.initialize(lul_device)
		end
	</functions>
	<startup>initialize</startup>
	<actionList>
		<action>
			<serviceId>urn:upnp-org:serviceId:TemperatureSetpoint1_Heat</serviceId>
			<name>SetCurrentSetpoint</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:upnp-org:serviceId:TemperatureSetpoint1_Heat", "SetCurrentSetpoint")
			</job>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:TemperatureSetpoint1_Cool</serviceId>
			<name>SetCurrentSetpoint</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:upnp-org:serviceId:TemperatureSetpoint1_Cool", "SetCurrentSetpoint")
			</job>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:HVAC_UserOperatingMode1</serviceId>
			<name>SetModeTarget</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:upnp-org:serviceId:HVAC_UserOperatingMode1", "SetModeTarget")
			</job>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:HVAC_UserOperatingMode1</serviceId>
			<name>SetEnergyModeTarget</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:upnp-org:serviceId:HVAC_UserOperatingMode1", "SetEnergyModeTarget")
			</job>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:HVAC_FanOperatingMode1</serviceId>
			<name>SetMode</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:upnp-org:serviceId:HVAC_FanOperatingMode1", "SetMode")
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_TemperatureHold1</serviceId>
			<name>SetTarget</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_TemperatureHold1", "SetTarget")
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>SetEnergyLED</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "SetEnergyLED")
			</job>			
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>ResetEnergyLED</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "ResetEnergyLED")
			</job>			
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>SetRemoteTemp</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "SetRemoteTemp")
			</job>			
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>ResetRemoteTemp</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "ResetRemoteTemp")
			</job>			
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>SetPMA</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "SetPMA")
			</job>			
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1</serviceId>
			<name>ResetPMA</name>
			<job>
				return g_core.dispatchJob(lul_device, lul_settings, lul_job,
				"urn:hugheaves-com:serviceId:HVAC_RTCOA_Wifi1", "ResetPMA")
			</job>			
		</action>
	</actionList>
</implementation>